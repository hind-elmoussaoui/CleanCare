import React, { useEffect, useState } from "react";
import { useNavigate, useLocation } from "react-router-dom";
import { FaUser, FaBell, FaPhone, FaMapMarkerAlt, FaInfoCircle, FaBriefcase, FaIdCard, FaCamera} from "react-icons/fa";
import axios from 'axios';


function UserInterface() {
  const navigate = useNavigate();
  const location = useLocation();
  const [user, setUser] = useState(null);
  const [loading, setLoading] = useState(true);
  const [profileData, setProfileData] = useState({
    phone: "",
    address: "",
    bio: "",
    services: [],
    newService: "",
    experience: "",
    cin: "",
    photo: null,
    photoPreview: ""
  });

  // Nouvelle palette de couleurs professionnelle
  const colors = {
    primary: "#00A896", // Turquoise foncé
    secondary: "#028090", // Bleu-vert marine
    accent: "#FF6B6B", // Corail doux
    light: "#F0F3F5", // Gris très clair
    lightBlue: "#B8E0D2", // Turquoise clair
    textDark: "#2E2E2E", // Noir doux
    textLight: "#FFFFFF", // Blanc
    success: "#4CAF50", // Vert
    warning: "#FFC107", // Jaune
    error: "#F44336", // Rouge
    highlight: "#E8F4F8", // Bleu très clair
  };

  useEffect(() => {
    const userData = JSON.parse(localStorage.getItem("user"));
    if (!userData || !localStorage.getItem("token")) {
      navigate("/signin");
      return;
    }

    // Simuler des données de profil existantes
    const mockProfileData = {
      phone: userData.phone || "",
      address: userData.address || "",
      bio: userData.bio || "",
      services: userData.services || [],
      newService: "",
      experience: userData.experience || "",
      cin: userData.cin || "",
      photo: userData.photo || null,
      photoPreview: userData.photo ? URL.createObjectURL(userData.photo) : ""
    };

    setUser(userData);
    setProfileData(mockProfileData);
    setLoading(false);

    if (location.state?.fromSignUp) {
      setSuccessMessage(
        `Bienvenue ${userData.name}! Votre compte ${userData.role} a été créé avec succès.`
      );
      setTimeout(() => setSuccessMessage(""), 5000);
    }
  }, [navigate, location]);


  const handleProfileChange = (e) => {
    const { name, value } = e.target;
    setProfileData((prev) => ({ ...prev, [name]: value }));
  };

  const handleFileChange = (e) => {
    const file = e.target.files[0];
    if (file) {
      setProfileData(prev => ({
        ...prev,
        photo: file,
        photoPreview: URL.createObjectURL(file)
      }));
    }
  };

  const addService = () => {
    if (profileData.newService.trim()) {
      setProfileData((prev) => ({
        ...prev,
        services: [...prev.services, prev.newService.trim()],
        newService: "",
      }));
    }
  };

  const removeService = (index) => {
    setProfileData((prev) => ({
      ...prev,
      services: prev.services.filter((_, i) => i !== index),
    }));
  };

  const saveProfile = async () => {
    try {
    const token = localStorage.getItem("token");
    const user = JSON.parse(localStorage.getItem("user"));
    const userId = user?.id;
    
      const formData = new FormData();
      formData.append("userId", userId);
      formData.append("phone", profileData.phone);
      formData.append("address", profileData.address);
      formData.append("cin", profileData.cin);
      formData.append("bio", profileData.bio);
      formData.append("experience", profileData.experience);
      formData.append("services", JSON.stringify(profileData.services));
      if (profileData.photo) {
        formData.append("photo", profileData.photo);
      }
  
      const response = await axios.put(
        `http://localhost:5000/api/users/profile`, // ✅ backend route
        formData,
        {
          headers: {
            Authorization: `Bearer ${token}`,
            "Content-Type": "multipart/form-data",
          },
        }
      );
  
      console.log("Profil mis à jour:", response.data);
    } catch (error) {
      console.error("Error during profile update:", error);
    }
  };
  

  if (loading) {
    return (
      <div
        className="flex justify-center items-center h-screen"
        style={{ backgroundColor: colors.light }}
      >
        <div
          className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2"
          style={{ borderColor: colors.primary }}
        ></div>
      </div>
    );
  }

  return (
    <div
      className="flex min-h-screen"
      style={{ backgroundColor: colors.light }}
    >

      {/* Main Content */}
      <div className="flex-1 overflow-auto">
        {/* Top Bar */}
        <header
          className="shadow-sm p-4 flex justify-between items-center"
          style={{
            backgroundColor: colors.textLight,
            boxShadow: "0 2px 5px rgba(0,0,0,0.05)",
          }}
        >
          <h2
            className="text-xl font-semibold"
            style={{ color: colors.textDark }}
          >
            {activeTab === "profile" && "Profil"}
          </h2>
          <div className="flex items-center space-x-4">
            <div className="relative">
              <FaBell
                size={20}
                style={{ color: colors.secondary, cursor: "pointer" }}
              />
              <span
                className="absolute -top-1 -right-1 h-4 w-4 rounded-full flex items-center justify-center text-xs"
                style={{
                  backgroundColor: colors.accent,
                  color: colors.textLight,
                }}
              >
                3
              </span>
            </div>
          </div>
        </header>

        {/* Content Area */}
        <main className="p-6">
        {activeTab === "dashboard" && (
            <>
              {renderRoleSpecificContent()}

              <div
                className="mt-6 rounded-lg shadow p-6"
                style={{ backgroundColor: colors.textLight }}
              >
                <h3
                  className="text-xl font-semibold mb-4"
                  style={{ color: colors.textDark }}
                >
                  Activité Récente
                </h3>
                <div className="space-y-4">
                  <div
                    className="border-b pb-4"
                    style={{ borderColor: colors.light }}
                  >
                    <p
                      className="text-sm mb-1"
                      style={{ color: colors.secondary }}
                    >
                      Aujourd'hui, 10:30
                    </p>
                    <p
                      className="font-medium"
                      style={{ color: colors.textDark }}
                    >
                      {user?.role === "client"
                        ? "Vous avez demandé un service de nounou"
                        : "Nouvelle demande de service reçue"}
                    </p>
                  </div>
                  <div
                    className="border-b pb-4"
                    style={{ borderColor: colors.light }}
                  >
                    <p
                      className="text-sm mb-1"
                      style={{ color: colors.secondary }}
                    >
                      Hier, 15:45
                    </p>
                    <p
                      className="font-medium"
                      style={{ color: colors.textDark }}
                    >
                      {user?.role === "client"
                        ? "Votre rendez-vous avec femme de ménage Pro a été confirmé"
                        : "Vous avez confirmé un rendez-vous avec saoud"}
                    </p>
                  </div>
                </div>
              </div>
            </>
          )}

          {activeTab === "profile" && (
            <div className="rounded-lg shadow p-6" style={{ backgroundColor: colors.textLight }}>
              <h3 className="text-xl font-semibold mb-6" style={{ color: colors.textDark }}>
                <FaUser className="inline mr-2" /> Mon Profil Complet
              </h3>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                {/* Section Informations de base (pour tous les utilisateurs) */}
                <div>
                  <h4 className="text-lg font-medium mb-4 flex items-center" style={{ color: colors.primary }}>
                    <FaInfoCircle className="mr-2" /> Informations Personnelles
                  </h4>
                  
                  {/* Photo de profil */}
                  <div className="mb-4 flex flex-col items-center">
                    <div className="relative mb-2">
                      <img
                        src={profileData.photoPreview || "https://via.placeholder.com/150"}
                        alt="Photo de profil"
                        className="w-32 h-32 rounded-full object-cover border-2"
                        style={{ borderColor: colors.primary }}
                      />
                      <label className="absolute bottom-0 right-0 bg-white p-2 rounded-full shadow-md cursor-pointer">
                        <FaCamera style={{ color: colors.primary }} />
                        <input
                          type="file"
                          accept="image/*"
                          onChange={handleFileChange}
                          className="hidden"
                        />
                      </label>
                    </div>
                    <p className="text-sm text-gray-500">Cliquez sur l'icône pour changer la photo</p>
                  </div>

                  <div className="space-y-4">
                    {/* Nom et Email (lecture seule) */}
                    <div>
                      <label className="block text-sm font-medium mb-1" style={{ color: colors.textDark }}>
                        Nom complet
                      </label>
                      <input
                        type="text"
                        value={profileData.name || user?.name || ''}
                        readOnly
                        className="w-full p-3 rounded-md border bg-gray-100"
                        style={{ borderColor: colors.lightBlue }}
                      />
                    </div>

                    <div>
                      <label className="block text-sm font-medium mb-1" style={{ color: colors.textDark }}>
                        Email
                      </label>
                      <input
                        type="email"
                        value={profileData.email || user?.email || ''}
                        readOnly
                        className="w-full p-3 rounded-md border bg-gray-100"
                        style={{ borderColor: colors.lightBlue }}
                      />
                    </div>

                    <div>
                      <label className="block text-sm font-medium mb-1" style={{ color: colors.textDark }}>
                        <FaPhone className="inline mr-2" /> Téléphone
                      </label>
                      <input
                        type="tel"
                        name="phone"
                        value={profileData.phone}
                        onChange={handleProfileChange}
                        className="w-full p-3 rounded-md border focus:ring-2 focus:outline-none transition-all"
                        style={{
                          borderColor: colors.lightBlue,
                          focusBorderColor: colors.primary,
                        }}
                        placeholder="Votre numéro de téléphone"
                      />
                    </div>

                    <div>
                      <label className="block text-sm font-medium mb-1" style={{ color: colors.textDark }}>
                        <FaMapMarkerAlt className="inline mr-2" /> Adresse
                      </label>
                      <input
                        type="text"
                        name="address"
                        value={profileData.address}
                        onChange={handleProfileChange}
                        className="w-full p-3 rounded-md border focus:ring-2 focus:outline-none transition-all"
                        style={{
                          borderColor: colors.lightBlue,
                          focusBorderColor: colors.primary,
                        }}
                        placeholder="Votre adresse complète"
                      />
                    </div>

                    <div>
                      <label className="block text-sm font-medium mb-1" style={{ color: colors.textDark }}>
                        <FaIdCard className="inline mr-2" /> Numéro CIN
                      </label>
                      <input
                        type="text"
                        name="cin"
                        value={profileData.cin}
                        onChange={handleProfileChange}
                        className="w-full p-3 rounded-md border focus:ring-2 focus:outline-none transition-all"
                        style={{
                          borderColor: colors.lightBlue,
                          focusBorderColor: colors.primary,
                        }}
                        placeholder="Votre numéro de carte d'identité"
                      />
                    </div>

                    <div>
                      <label className="block text-sm font-medium mb-1" style={{ color: colors.textDark }}>
                        Bio / Description
                      </label>
                      <textarea
                        name="bio"
                        value={profileData.bio}
                        onChange={handleProfileChange}
                        rows="3"
                        className="w-full p-3 rounded-md border focus:ring-2 focus:outline-none transition-all"
                        style={{
                          borderColor: colors.lightBlue,
                          focusBorderColor: colors.primary,
                        }}
                        placeholder="Décrivez-vous en quelques mots..."
                      ></textarea>
                    </div>
                  </div>
                </div>

                {/* Section spécifique aux prestataires */}
                {user?.role === "provider" && (
                  <div>
                    <h4 className="text-lg font-medium mb-4 flex items-center" style={{ color: colors.primary }}>
                      <FaBriefcase className="mr-2" /> Informations Professionnelles
                    </h4>
                    
                    <div className="space-y-4">
                      <div>
                        <label className="block text-sm font-medium mb-1" style={{ color: colors.textDark }}>
                          Années d'expérience
                        </label>
                        <input
                          type="number"
                          name="experience"
                          value={profileData.experience}
                          onChange={handleProfileChange}
                          className="w-full p-3 rounded-md border focus:ring-2 focus:outline-none transition-all"
                          style={{
                            borderColor: colors.lightBlue,
                            focusBorderColor: colors.primary,
                          }}
                          placeholder="Nombre d'années d'expérience"
                          min="0"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium mb-1" style={{ color: colors.textDark }}>
                          Services proposés
                        </label>
                        <div className="flex mb-2">
                          <input
                            name="sevices"
                            value={profileData.newService}
                            onChange={(e) => setProfileData({...profileData, newService: e.target.value})}
                            className="flex-1 p-3 rounded-l-md border focus:ring-2 focus:outline-none transition-all"
                            style={{
                              borderColor: colors.lightBlue,
                              focusBorderColor: colors.primary,
                            }}
                            placeholder="Ex: Garde d'enfants, Ménage, Cuisine..."
                          />
                          <button
                            type="button"
                            onClick={addService}
                            className="px-4 py-3 rounded-r-md font-medium transition-all"
                            style={{
                              backgroundColor: colors.primary,
                              color: colors.textLight,
                            }}
                          >
                            Ajouter
                          </button>
                        </div>
                        
                        <div className="space-y-2">
                          {profileData.services.length > 0 ? (
                            profileData.services.map((service, index) => (
                              <div 
                                key={index} 
                                className="flex justify-between items-center p-3 rounded-md"
                                style={{ backgroundColor: colors.highlight }}
                              >
                                <span style={{ color: colors.textDark }}>{service}</span>
                                <button
                                  onClick={() => removeService(index)}
                                  className="text-red-500 hover:text-red-700"
                                >
                                  ×
                                </button>
                              </div>
                            ))
                          ) : (
                            <p className="text-sm italic" style={{ color: colors.secondary }}>
                              Aucun service ajouté pour le moment
                            </p>
                          )}
                        </div>
                      </div>
                    </div>
                  </div>
                )}
              </div>

              {/* Bouton de sauvegarde */}
              <div className="mt-8 text-center">
                <button
                  onClick={saveProfile}
                  className="px-8 py-3 rounded-md font-medium transition-all hover:shadow-md"
                  style={{
                    backgroundColor: colors.primary,
                    color: colors.textLight,
                  }}
                >
                  Enregistrer les modifications
                </button>
              </div>
            </div>
          )}

        </main>
      </div>
    </div>
  );
}

export default UserInterface;
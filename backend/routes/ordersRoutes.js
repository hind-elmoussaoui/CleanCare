const express = require("express");
const router = express.Router();
const Order = require("../models/OrderModels");

// Route pour cr√©er une nouvelle commande
router.post("/orders", async (req, res) => {
    try {
        console.log("Donn√©es re√ßues :", req.body); // V√©rifie si les donn√©es sont re√ßues
        const newOrder = new Order(req.body);
        await newOrder.save();
        res.status(201).json({ message: "Commande enregistr√©e avec succ√®s !" });
    } catch (error) {
        console.error("Erreur lors de l'enregistrement de la commande :", error);
        res.status(500).json({ message: "Erreur serveur", error });
    }
});

router.get("/orders", async (req, res) => {
    try {
        console.log("üì• Requ√™te GET re√ßue sur /orders"); // Log de v√©rification
        const orders = await Order.find().sort({ createdAt: -1 });
        console.log("üì¶ Donn√©es envoy√©es :", orders); // Log des donn√©es envoy√©es
        res.status(200).json(orders);
    } catch (error) {
        console.error("‚ùå Erreur lors de la r√©cup√©ration des commandes :", error);
        res.status(500).json({ message: "Erreur serveur" });
    }
});

// Dans votre fichier de routes (ex: routes/orders.js)
router.delete('/orders/:id', async (req, res) => {
    try {
        const order = await Order.findByIdAndDelete(req.params.id);
        
        if (!order) {
            return res.status(404).json({ message: 'Commande non trouv√©e' });
        }
        
        res.json({ message: 'Commande supprim√©e avec succ√®s' });
    } catch (err) {
        res.status(500).json({ message: err.message });
    }
});

module.exports = router;
